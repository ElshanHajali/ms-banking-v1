version: '3.9'

services:
  accounts-db:
    image: postgres
    volumes:
      - accounts_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: user
      POSTGRES_DB: accounts
    networks:
      - backend
    mem_limit: 200 M
    ports:
      - "5434:5432"

  loans-db:
    image: postgres
    volumes:
      - loans_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: user
      POSTGRES_DB: loans
    networks:
      - backend
    mem_limit: 200 M
    ports:
      - "5535:5432"

  cards-db:
    image: postgres
    volumes:
      - cards_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: user
      POSTGRES_DB: cards
    networks:
      - backend
    mem_limit: 200 M
    ports:
      - "5636:5432"

  accounts:
    image: worldoflegion/accounts:0.0.1
    mem_limit: 700m
    hostname: accounts-hostname
    container_name: accounts_container
    build:
      dockerfile: accounts/Dockerfile
    ports:
      - "9000:8080"
    networks:
      - backend
    depends_on:
      - accounts-db
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://accounts-db:5432/accounts
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: user

  loans:
    image: worldoflegion/loans:0.0.1
    mem_limit: 700m
    hostname: loans-hostname
    container_name: loans_container
    build:
      dockerfile: loans/Dockerfile
    ports:
      - "9001:8181"
    networks:
      - backend
    depends_on:
      - loans-db
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://loans-db:5432/loans
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: user

  cards:
    image: worldoflegion/cards:0.0.1
    mem_limit: 700m
    hostname: cards-hostname
    container_name: cards_container
    build:
      dockerfile: cards/Dockerfile
    ports:
      - "9002:8282"
    networks:
      - backend
    depends_on:
      - cards-db
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://cards-db:5432/cards
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: user

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - "./prometheus.yaml:/etc/prometheus/prometheus.yml"
    networks:
      - backend

  grafana:
    image: "grafana/grafana:latest"
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
    networks:
      - backend
    depends_on:
      - prometheus
# Grafana ready dashboards:
# spring boot 2.1 system monitor
# jvm micrometer

networks:
  backend:

volumes:
  accounts_data:
  loans_data:
  cards_data: